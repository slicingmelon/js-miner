package burp.utils;

import burp.BurpExtender;
import burp.api.montoya.http.message.HttpRequestResponse;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.nio.file.Path;

public class SourceMapper {
    private final HttpRequestResponse requestResponse;
    private final String jsonMapFile;
    private final Path outputDirPath;

    public SourceMapper(HttpRequestResponse requestResponse, String jsonMapFile, Path outputDirPath) {
        this.requestResponse = requestResponse;
        this.jsonMapFile = jsonMapFile;
        this.outputDirPath = outputDirPath;
        parseMapFile();
    }

    public void parseMapFile() {
        ObjectMapper objectMapper = new ObjectMapper()
                .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
        try {
            JSMapFile mapFile = objectMapper.readValue(jsonMapFile, JSMapFile.class);
            for (int i = 0; i <= mapFile.getSources().length - 1; i++) {
                if (FileUtils.saveFile(
                        mapFile.getSources()[i]
                                .replaceAll("\\?.*", "")
                                .replaceAll("[?%*|:\"<>~]", ""),
                        mapFile.getSourcesContent()[i].getBytes(),
                        outputDirPath
                )) {
                    sendJSMapperIssue();
                }
            }
        } catch (Exception e) {
            BurpExtender.api.logging().logToError("Error processing the file - parseMapFile Exception: " + e.getMessage());
        }
    }

    private void sendJSMapperIssue() {
        try {
            var issue = CustomScanIssue.from(
                    requestResponse,
                    "[JS Miner] JavaScript Source Mapper",
                    "This issue was generated by \"" + BurpExtender.EXTENSION_NAME + "\" Burp extension.<br><br>" +
                            "It was possible to retrieve JavaScript source map files of the target host." +
                            "The retrieved (front-end) source code is available (for manual review) in the following location:<br><br>"
                            + "<b>" + outputDirPath + "</b>",
                    null,
                    "Information",
                    "Certain"
            );
            BurpExtender.api.siteMap().add(issue);
        } catch (Exception e) {
            BurpExtender.api.logging().logToError("Error creating source mapper issue: " + e.getMessage());
        }
    }
}
